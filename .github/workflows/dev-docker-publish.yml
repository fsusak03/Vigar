name: Docker (dev)

on:
  pull_request:
    branches: [ dev ]
    types: [ opened, synchronize, reopened, ready_for_review ]
  push:
    branches: [ dev ]

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/vigar

jobs:
  # âœ… Required check na PR-u (nema push)
  build-check:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Extract version (semver)
        id: extract_version
        shell: bash
        run: |
          VERSION=$(grep -Po 'VERSION"\s*:\s*"\K[^"]+' Vigar/settings.py || echo "0.0.0")
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - uses: docker/setup-buildx-action@v3

      - name: Build (no push) â€” PR check (amd64)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          platforms: linux/amd64
          cache-from: |
            type=registry,ref=${{ env.IMAGE_NAME }}:cache
            type=gha
          cache-to: |
            type=registry,ref=${{ env.IMAGE_NAME }}:cache,mode=max
            type=gha,mode=max
          provenance: false
          sbom: false

  # ðŸš€ Nakon mergea u dev â€” pravi publish (amd64)
  publish:
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/heads/dev') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Extract version (semver)
        id: extract_version
        shell: bash
        run: |
          VERSION=$(grep -Po 'VERSION"\s*:\s*"\K[^"]+' Vigar/settings.py || echo "0.0.0")
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push image (dev, amd64)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64
          cache-from: |
            type=registry,ref=${{ env.IMAGE_NAME }}:cache
            type=gha
          cache-to: |
            type=registry,ref=${{ env.IMAGE_NAME }}:cache,mode=max
            type=gha,mode=max
          provenance: false
          sbom: false
          tags: |
            ${{ env.IMAGE_NAME }}:dev-latest
            ${{ env.IMAGE_NAME }}:dev-${{ github.sha }}
            ${{ env.IMAGE_NAME }}:dev-${{ steps.extract_version.outputs.version }}
