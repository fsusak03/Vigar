name: Docker (dev)

on:
  pull_request:
    branches: [ dev ]
    types: [ opened, synchronize, reopened, ready_for_review ]
  push:
    branches: [ dev ]

permissions:
  contents: read
  packages: write

jobs:
  # ‚úÖ Ovaj job se vrti NA PR-u i slu≈æi kao required check (nema push)
  build-check:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Extract version (semver)
        id: extract_version
        shell: bash
        run: |
          VERSION=$(python - <<'PY'
          import io, re
          with io.open('Vigar/settings.py', 'r', encoding='utf-8') as f:
            s = f.read()
          m = re.search(r'VERSION"\s*:\s*"([^"]+)"', s)
          print(m.group(1) if m else '0.0.0')
          PY
          )
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      # Nije potreban login jer ne pushamo
      - name: Build (no push) ‚Äî PR check
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          # Br≈æi check: samo amd64 da PR ne visi dugo (mo≈æe≈° staviti i arm64 ako ba≈° treba)
          platforms: linux/amd64
          # Kori≈°tenje cache-a da check bude ≈°to br≈æi
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # üöÄ Ovaj job ide TEK nakon mergea (push na dev) i radi pravi multi-arch push
  publish:
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/heads/dev') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Extract version (semver)
        id: extract_version
        shell: bash
        run: |
          VERSION=$(python - <<'PY'
          import io, re
          with io.open('Vigar/settings.py', 'r', encoding='utf-8') as f:
            s = f.read()
          m = re.search(r'VERSION"\s*:\s*"([^"]+)"', s)
          print(m.group(1) if m else '0.0.0')
          PY
          )
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image (dev)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ghcr.io/${{ github.repository_owner }}/vigar:dev-latest
            ghcr.io/${{ github.repository_owner }}/vigar:dev-${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/vigar:dev-${{ steps.extract_version.outputs.version }}
