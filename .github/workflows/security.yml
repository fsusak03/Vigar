name: Security Scan with Semgrep

on:
  # Run on pull requests
  pull_request:
    branches: [ main, dev, develop ]
  
  # Run on pushes to main and dev branches
  push:
    branches: [ main, dev, develop ]
  
  # Allow manual trigger
  workflow_dispatch:

jobs:
  semgrep:
    name: Semgrep Security Scan
    runs-on: ubuntu-latest
    
    # Skip duplicate runs for PRs from the same repo
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.repository

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Full history for better analysis
          fetch-depth: 0

      - name: Run Semgrep
        uses: semgrep/semgrep-action@v1
        with:
          # Use Semgrep's curated rulesets for security and best practices
          config: >-
            p/security-audit
            p/python
            p/django
            p/docker
            p/secrets
          # Generate JSON and SARIF reports
          generateSarif: "1"
        env:
          # Required for private repositories and enhanced features
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
          
      - name: Upload Semgrep results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: semgrep.sarif
          
      - name: Comment on PR with results
        if: github.event_name == 'pull_request' && failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '⚠️ **Semgrep Security Scan Failed**\n\nSecurity issues were found in this PR. Please check the Security tab or the workflow logs for details.\n\n[View full results](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})'
            })

  # Additional job to check for secrets in commits
  secret-scan:
    name: Secret Detection
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.repository
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Run TruffleHog
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified